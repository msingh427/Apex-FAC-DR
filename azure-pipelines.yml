trigger:
- main
 
pool:
  vmImage: windows-latest
 
variables:
  terraformVersion: '4.0.0'
  workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

stages:
  - stage: Terraform_Init_and_Plan
    displayName: 'Terraform Init and Plan'
    jobs:
      - job: Terraform_Init
        displayName: 'Terraform Init'
        steps:
          - checkout: self
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: $(terraformVersion)
          - task: AzureCLI@2
            displayName: 'Initialize Terraform'
            inputs:
              azureSubscription: 'Apex-svc'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -backend=false
              workingDirectory: $(workingDirectory)
        
 
      - job: Terraform_Plan
        displayName: "Terraform Plan"
        dependsOn: Terraform_Init
        steps:
        - checkout: self
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: $(workingDirectory)
            environmentServiceNameAzureRM: 'Apex-svc'
 
      - job: Terraform_Apply
        displayName: "Terraform Apply"
        dependsOn: Terraform_Plan
        steps:
        - checkout: self
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: $(workingDirectory)
            commandOptions: '-auto-approve'
            environmentServiceNameAzureRM: 'Apex-svc'