
trigger:
- main

pool:
  vmImage: windows-latest

stages:
- stage: Terraform_Install
  displayName: "Terraform Install"
  jobs:
  - job: Terraform_install
    displayName: "Terraform install"
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: 'Apex-svc'
        ScriptType: 'InlineScript'
        Inline: 'echo $(System.DefaultWorkingDirectory)/'
        azurePowerShellVersion: 'LatestVersion'

- stage: Terraform_Init_and_Plan
  displayName: "Terraform Init and Plan"
  jobs:
  - job: Terraform_Init
    displayName: "Terraform Init"
    steps:
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
        backendAzureRmUseEntraIdForAuthentication: false
        backendServiceArm: 'Apex-svc'
        backendAzureRmStorageAccountName: 'stgaccountcheck'
        backendAzureRmContainerName: 'blobtest'
        backendAzureRmKey: 'tf/terraform.tfstate'

  - job: Terraform_Plan
    displayName: "Terraform Plan"
    dependsOn: Terraform_Init
    steps:
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
        environmentServiceNameAzureRM: 'Apex-svc'

  - job: Terraform_Apply
    displayName: "Terraform Apply"
    steps:
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
        commandOptions: '-auto-approve'
        environmentServiceNameAzureRM: 'Apex-svc'